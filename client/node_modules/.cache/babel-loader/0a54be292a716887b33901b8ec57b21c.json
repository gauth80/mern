{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gauth\\\\Desktop\\\\perso\\\\site\\\\src\\\\components\\\\pages\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { FirebaseContext } from '../Firebase';\n\nconst Main = props => {\n  _s();\n\n  const ctx = useContext(FirebaseContext); //var etats\n\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    //methode propre a fireBase, check le state de session @{call}\n    ctx.auth.onAuthStateChanged(user => {\n      user ? setSession(user) : props.history.push(\"/connexion\");\n    }); //componentWillUnMount ou phase de démontage pour un hook\n    //d'où le context en local\n\n    return () => {\n      setSession(null);\n    };\n  }, [session]);\n  return session === null ? /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"helper\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"..Cherche si tu existe dans les registres..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"le main, tu est connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Main, \"OqVnWA4Q4+ICZ48RGxnoXP+kodc=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Gauth/Desktop/perso/site/src/components/pages/Main.jsx"],"names":["React","useState","useContext","useEffect","FirebaseContext","Main","props","ctx","session","setSession","auth","onAuthStateChanged","user","history","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,eAAR,QAA8B,aAA9B;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAMC,GAAG,GAAGL,UAAU,CAACE,eAAD,CAAtB,CAFsB,CAGtB;;AACA,QAAM,CAACI,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,IAAD,CAArC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,GAAG,CAACG,IAAJ,CAASC,kBAAT,CAA4BC,IAAI,IAAI;AAClCA,MAAAA,IAAI,GAAGH,UAAU,CAACG,IAAD,CAAb,GAAsBN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,YAAnB,CAA1B;AACC,KAFH,EAFc,CAKd;AACA;;AACA,WAAO,MAAM;AACXL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD;AAGD,GAVQ,EAUP,CAACD,OAAD,CAVO,CAAT;AAYA,SAAOA,OAAO,KAAK,IAAZ,gBACL;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAOL;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBAPF;AAWD,CA7BD;;GAAMH,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport {FirebaseContext} from '../Firebase';\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n  const ctx = useContext(FirebaseContext);\r\n  //var etats\r\n  const [session,setSession] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //methode propre a fireBase, check le state de session @{call}\r\n    ctx.auth.onAuthStateChanged(user => {\r\n      user ? setSession(user) : props.history.push(\"/connexion\");\r\n      });\r\n    //componentWillUnMount ou phase de démontage pour un hook\r\n    //d'où le context en local\r\n    return () => {\r\n      setSession(null)\r\n    }\r\n  },[session]);\r\n\r\n  return session === null ? (\r\n    <main className=\"container row\">\r\n      <div className=\"helper\">\r\n              <p>..Cherche si tu existe dans les registres..</p>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <>\r\n      <p>le main, tu est connecter</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}