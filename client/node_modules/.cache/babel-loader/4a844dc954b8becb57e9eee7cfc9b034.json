{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore'; //import key from './key/config.json';\n//key de l'api :)\n//const config = key;\n\nconst config = {\n  apiKey: \"AIzaSyBCAFvQ3T6x_yn7ZyN-YsIMh_1ZY0qKbY8\",\n  authDomain: \"modulefront.firebaseapp.com\",\n  databaseURL: \"https://modulefront.firebaseio.com\",\n  projectId: \"modulefront\",\n  storageBucket: \"modulefront.appspot.com\",\n  messagingSenderId: \"1096124293817\",\n  appId: \"1:1096124293817:web:753894a6eea6b021337168\"\n};\n\nclass Firebase {\n  constructor() {\n    this.inscription = (email, password) => this.auth.createUserWithEmailAndPassword(email, password).catch(error => {\n      const errorMessage = error.message;\n\n      if (errorCode === 'auth/weak-password') {\n        alert('mot de passe trop courts');\n      } else if (errorCode === 'auth/invalid-email') {\n        alert('email invalide !!');\n      } else if (errorCode === 'auth/email-already-in-use') {\n        alert('cette email existe déja.');\n      }\n    });\n\n    this.connexion = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.deconnexion = () => this.auth.signOut();\n\n    this.user = uid => this.db.doc(`user/${uid}`);\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.errorCode = app.error.code;\n    this.errorMessage = app.error.message;\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["C:/Users/Gauth/Desktop/perso/site/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","constructor","inscription","email","password","auth","createUserWithEmailAndPassword","catch","error","errorMessage","message","errorCode","alert","connexion","signInWithEmailAndPassword","deconnexion","signOut","user","uid","db","doc","initializeApp","firestore","code"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CACA;AAEA;AACA;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,6BAFC;AAGbC,EAAAA,WAAW,EAAE,oCAHA;AAIbC,EAAAA,SAAS,EAAE,aAJE;AAKbC,EAAAA,aAAa,EAAE,yBALF;AAMbC,EAAAA,iBAAiB,EAAE,eANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;;AAUA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AAAA,SAQdC,WARc,GAQA,CAACC,KAAD,EAAOC,QAAP,KACZ,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAA+CC,QAA/C,EACCG,KADD,CACOC,KAAK,IAAI;AACd,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;;AACA,UAAIC,SAAS,KAAK,oBAAlB,EAAwC;AACtCC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,OAFD,MAEO,IAAID,SAAS,KAAK,oBAAlB,EAAwC;AAC7CC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD,OAFM,MAEA,IAAGD,SAAS,KAAK,2BAAjB,EAA8C;AACnDC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;AACF,KAVD,CATY;;AAAA,SAsBdC,SAtBc,GAsBF,CAACV,KAAD,EAAOC,QAAP,KACV,KAAKC,IAAL,CAAUS,0BAAV,CAAqCX,KAArC,EAA2CC,QAA3C,CAvBY;;AAAA,SAyBdW,WAzBc,GAyBA,MACZ,KAAKV,IAAL,CAAUW,OAAV,EA1BY;;AAAA,SA6BdC,IA7Bc,GA6BPC,GAAG,IACR,KAAKC,EAAL,CAAQC,GAAR,CAAa,QAAOF,GAAI,EAAxB,CA9BY;;AACZ3B,IAAAA,GAAG,CAAC8B,aAAJ,CAAkB7B,MAAlB;AACA,SAAKa,IAAL,GAAYd,GAAG,CAACc,IAAJ,EAAZ;AACA,SAAKc,EAAL,GAAU5B,GAAG,CAAC+B,SAAJ,EAAV;AACA,SAAKX,SAAL,GAAiBpB,GAAG,CAACiB,KAAJ,CAAUe,IAA3B;AACA,SAAKd,YAAL,GAAoBlB,GAAG,CAACiB,KAAJ,CAAUE,OAA9B;AACD;;AAPY;;AAkCf,eAAeV,QAAf","sourcesContent":["import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n//import key from './key/config.json';\r\n\r\n//key de l'api :)\r\n//const config = key;\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBCAFvQ3T6x_yn7ZyN-YsIMh_1ZY0qKbY8\",\r\n  authDomain: \"modulefront.firebaseapp.com\",\r\n  databaseURL: \"https://modulefront.firebaseio.com\",\r\n  projectId: \"modulefront\",\r\n  storageBucket: \"modulefront.appspot.com\",\r\n  messagingSenderId: \"1096124293817\",\r\n  appId: \"1:1096124293817:web:753894a6eea6b021337168\"\r\n}\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.auth = app.auth();\r\n    this.db = app.firestore();\r\n    this.errorCode = app.error.code;\r\n    this.errorMessage = app.error.message;\r\n  }\r\n\r\n  inscription = (email,password) =>\r\n    this.auth.createUserWithEmailAndPassword(email,password)\r\n    .catch(error => {\r\n      const errorMessage = error.message;\r\n      if (errorCode === 'auth/weak-password') {\r\n        alert('mot de passe trop courts');\r\n      } else if (errorCode === 'auth/invalid-email') {\r\n        alert('email invalide !!');\r\n      } else if(errorCode === 'auth/email-already-in-use') {\r\n        alert('cette email existe déja.')\r\n      }\r\n    });\r\n\r\n\r\n  connexion = (email,password) =>\r\n    this.auth.signInWithEmailAndPassword(email,password);\r\n\r\n  deconnexion = () =>\r\n    this.auth.signOut();\r\n\r\n\r\n  user = uid =>\r\n    this.db.doc(`user/${uid}`);\r\n}\r\n\r\nexport default Firebase;\r\n"]},"metadata":{},"sourceType":"module"}