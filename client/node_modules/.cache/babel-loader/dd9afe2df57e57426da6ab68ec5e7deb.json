{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\n\nconst useSlide = (slideImg, slideTxt, slideData, img) => {\n  _s();\n\n  let counter = 0; //maj du hook\n\n  useEffect(() => beginSlide());\n\n  const beginSlide = () => {\n    slideImg.current.style.background = `url(${img[0].src})`;\n    slideTxt.current.innerHTML = img[0].txt;\n    slideData.current.innerHTML = img[0].data;\n  };\n\n  const handleSlide = slide => {\n    //props slide sert de key\n    slideImg.current.style.background = `url(${img[slide - 1].src})`;\n    slideTxt.current.innerHTML = img[slide - 1].txt;\n    slideData.current.innerHTML = img[slide - 1].data;\n    animationSlide(slideImg);\n  };\n\n  const animationSlide = () => {\n    /*slideTxt.current.classList.add(\"fadeIn\")\r\n    //timer, après 1000ms, callback => remove.class\r\n      setTimeout( () => {\r\n        slideImg.current.classList.remove(\"fadeIn\");\r\n      },1000);*/\n  };\n\n  const rightDirection = () => {\n    if (counter === 0) {\n      handleSlide(img.length);\n      counter = img.length;\n    }\n\n    handleSlide(counter);\n    counter--;\n  };\n\n  const leftDirection = () => {\n    if (counter === img.length - 1) {\n      beginSlide(); //counter devient -1 et non une décrémentation fonctionnelle\n\n      counter = -1;\n      animationSlide(slideImg);\n    }\n\n    slideImg.current.style.background = `url(${img[counter + 1].src})`;\n    slideTxt.current.innerHTML = img[counter + 1].txt;\n    slideData.current.innerHTML = img[counter + 1].data;\n    counter++;\n    animationSlide(slideImg);\n  };\n\n  return {\n    rightDirection,\n    leftDirection\n  };\n};\n\n_s(useSlide, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useSlide;","map":{"version":3,"sources":["C:/Users/Gauth/Desktop/perso/site/src/hooks/useSlide.jsx"],"names":["useEffect","useSlide","slideImg","slideTxt","slideData","img","counter","beginSlide","current","style","background","src","innerHTML","txt","data","handleSlide","slide","animationSlide","rightDirection","length","leftDirection"],"mappings":";;AACA,SAAQA,SAAR,QAAwB,OAAxB;;AAGA,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAUC,QAAV,EAAmBC,SAAnB,EAA6BC,GAA7B,KAAqC;AAAA;;AACpD,MAAIC,OAAO,GAAG,CAAd,CADoD,CAGpD;;AACAN,EAAAA,SAAS,CAAC,MAAMO,UAAU,EAAjB,CAAT;;AAEA,QAAMA,UAAU,GAAG,MAAM;AACvBL,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,KAAjB,CAAuBC,UAAvB,GAAqC,OAAML,GAAG,CAAC,CAAD,CAAH,CAAOM,GAAI,GAAtD;AACAR,IAAAA,QAAQ,CAACK,OAAT,CAAiBI,SAAjB,GAA6BP,GAAG,CAAC,CAAD,CAAH,CAAOQ,GAApC;AACAT,IAAAA,SAAS,CAACI,OAAV,CAAkBI,SAAlB,GAA8BP,GAAG,CAAC,CAAD,CAAH,CAAOS,IAArC;AACD,GAJD;;AAMA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B;AACAd,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,KAAjB,CAAuBC,UAAvB,GAAqC,OAAML,GAAG,CAACW,KAAK,GAAG,CAAT,CAAH,CAAeL,GAAI,GAA9D;AACAR,IAAAA,QAAQ,CAACK,OAAT,CAAiBI,SAAjB,GAA6BP,GAAG,CAACW,KAAK,GAAG,CAAT,CAAH,CAAeH,GAA5C;AACAT,IAAAA,SAAS,CAACI,OAAV,CAAkBI,SAAlB,GAA8BP,GAAG,CAACW,KAAK,GAAG,CAAT,CAAH,CAAeF,IAA7C;AACAG,IAAAA,cAAc,CAACf,QAAD,CAAd;AACD,GAND;;AAQA,QAAMe,cAAc,GAAG,MAAM;AAE3B;AACJ;AACA;AACA;AACA;AACG,GAPD;;AASA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAGZ,OAAO,KAAK,CAAf,EAAkB;AAChBS,MAAAA,WAAW,CAACV,GAAG,CAACc,MAAL,CAAX;AAEAb,MAAAA,OAAO,GAAGD,GAAG,CAACc,MAAd;AACD;;AAEDJ,IAAAA,WAAW,CAACT,OAAD,CAAX;AACAA,IAAAA,OAAO;AACR,GATD;;AAWA,QAAMc,aAAa,GAAG,MAAM;AAC1B,QAAGd,OAAO,KAAKD,GAAG,CAACc,MAAJ,GAAa,CAA5B,EAA+B;AAC7BZ,MAAAA,UAAU,GADmB,CAE7B;;AACAD,MAAAA,OAAO,GAAG,CAAC,CAAX;AACAW,MAAAA,cAAc,CAACf,QAAD,CAAd;AACD;;AAEDA,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,KAAjB,CAAuBC,UAAvB,GAAqC,OAAML,GAAG,CAACC,OAAO,GAAG,CAAX,CAAH,CAAiBK,GAAI,GAAhE;AACAR,IAAAA,QAAQ,CAACK,OAAT,CAAiBI,SAAjB,GAA6BP,GAAG,CAACC,OAAO,GAAG,CAAX,CAAH,CAAiBO,GAA9C;AACAT,IAAAA,SAAS,CAACI,OAAV,CAAkBI,SAAlB,GAA8BP,GAAG,CAACC,OAAO,GAAG,CAAX,CAAH,CAAiBQ,IAA/C;AACAR,IAAAA,OAAO;AACPW,IAAAA,cAAc,CAACf,QAAD,CAAd;AACD,GAbD;;AAeA,SAAO;AAACgB,IAAAA,cAAD;AAAiBE,IAAAA;AAAjB,GAAP;AACD,CAxDD;;GAAMnB,Q;;AA0DN,eAAeA,QAAf","sourcesContent":["\r\nimport {useEffect} from 'react';\r\n\r\n\r\nconst useSlide = (slideImg,slideTxt,slideData,img) => {\r\n  let counter = 0;\r\n\r\n  //maj du hook\r\n  useEffect(() => beginSlide());\r\n\r\n  const beginSlide = () => {\r\n    slideImg.current.style.background = `url(${img[0].src})`;\r\n    slideTxt.current.innerHTML = img[0].txt;\r\n    slideData.current.innerHTML = img[0].data;\r\n  }\r\n\r\n  const handleSlide = slide => {\r\n    //props slide sert de key\r\n    slideImg.current.style.background = `url(${img[slide - 1].src})`;\r\n    slideTxt.current.innerHTML = img[slide - 1].txt;\r\n    slideData.current.innerHTML = img[slide - 1].data;\r\n    animationSlide(slideImg);\r\n  }\r\n\r\n  const animationSlide = () => {\r\n\r\n    /*slideTxt.current.classList.add(\"fadeIn\")\r\n    //timer, après 1000ms, callback => remove.class\r\n      setTimeout( () => {\r\n        slideImg.current.classList.remove(\"fadeIn\");\r\n      },1000);*/\r\n  }\r\n\r\n  const rightDirection = () => {\r\n    if(counter === 0) {\r\n      handleSlide(img.length);\r\n\r\n      counter = img.length;\r\n    }\r\n\r\n    handleSlide(counter);\r\n    counter--;\r\n  }\r\n\r\n  const leftDirection = () => {\r\n    if(counter === img.length - 1) {\r\n      beginSlide();\r\n      //counter devient -1 et non une décrémentation fonctionnelle\r\n      counter = -1;\r\n      animationSlide(slideImg);\r\n    }\r\n\r\n    slideImg.current.style.background = `url(${img[counter + 1].src})`;\r\n    slideTxt.current.innerHTML = img[counter + 1].txt;\r\n    slideData.current.innerHTML = img[counter + 1].data;\r\n    counter++;\r\n    animationSlide(slideImg);\r\n  }\r\n\r\n  return {rightDirection, leftDirection};\r\n}\r\n\r\nexport default useSlide;\r\n"]},"metadata":{},"sourceType":"module"}