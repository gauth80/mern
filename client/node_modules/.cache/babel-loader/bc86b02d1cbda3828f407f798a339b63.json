{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { Link } from 'react-router-dom';\n\nconst Deconnexion = props => {\n  _s();\n\n  //context\n  const ctx = useContext(FirebaseContext); //var d'etat\n\n  const [user, setUser] = useState(false);\n  const [deco, setDeco] = useState(false);\n  useEffect(() => {\n    if (deco) {\n      ctx.deconnexion();\n      setDeco(false);\n    }\n  }, [deco, ctx]);\n\n  const handleClick = e => {\n    // deconnexion\n    setUser(false);\n  };\n};\n\n_s(Deconnexion, \"zE+9OU+5D60ZYULz2FV43tFqHM0=\");\n\n_c = Deconnexion;\nexport default Deconnexion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deconnexion\");","map":{"version":3,"sources":["C:/Users/Gauth/Desktop/perso/site/src/components/sas/Deconnexion.jsx"],"names":["React","useState","useEffect","useContext","FirebaseContext","Link","Deconnexion","props","ctx","user","setUser","deco","setDeco","deconnexion","handleClick","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,eAAR,QAA8B,aAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA,QAAMC,GAAG,GAAGL,UAAU,CAACC,eAAD,CAAtB,CAF6B,CAI7B;;AACA,QAAM,CAACK,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACU,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,KAAD,CAA/B;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,IAAH,EAAS;AACPH,MAAAA,GAAG,CAACK,WAAJ;AACAD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AAEF,GANQ,EAMN,CAACD,IAAD,EAAMH,GAAN,CANM,CAAT;;AAQA,QAAMM,WAAW,GAAGC,CAAC,IAAI;AACvB;AACAL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;AAID,CArBD;;GAAMJ,W;;KAAAA,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport {FirebaseContext} from '../Firebase';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Deconnexion = (props) => {\r\n  //context\r\n  const ctx = useContext(FirebaseContext);\r\n\r\n  //var d'etat\r\n  const [user,setUser] = useState(false);\r\n  const [deco,setDeco] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if(deco) {\r\n      ctx.deconnexion();\r\n      setDeco(false);\r\n    }\r\n\r\n  }, [deco,ctx]);\r\n\r\n  const handleClick = e => {\r\n    // deconnexion\r\n    setUser(false);\r\n  }\r\n}\r\n\r\nexport default Deconnexion;\r\n"]},"metadata":{},"sourceType":"module"}