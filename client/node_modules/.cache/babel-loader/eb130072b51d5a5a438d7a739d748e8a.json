{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gauth\\\\Desktop\\\\perso\\\\site\\\\src\\\\components\\\\pages\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { FirebaseContext } from '../Firebase'; //composants\n\nconst Main = props => {\n  _s();\n\n  const ctx = useContext(FirebaseContext); //var etats\n\n  const [session, setSession] = useState(null);\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    //si session actif\n    const user = ctx.auth.currentUser;\n    ctx.user(session.uid).get().then(doc => {\n      if (doc && doc.exists) {\n        //setUserData(doc.data());\n        const myData = doc.data();\n        setUserData(myData);\n      }\n    }).catch(error => {\n      console.log(`${error} : pas de collection trouver`);\n    });\n\n    if (user) {\n      setSession(user);\n    } else {\n      setSession(null);\n      props.history.push(\"/connexion\");\n    }\n  }, [ctx.auth.currentUser, props.history]);\n  return session === null ? /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"helper\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"..Cherche si tu existe dans les registres..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Session trouv\\xE9e !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"qfDU7LiP5S+nK3ufe7HG72Bho+o=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Gauth/Desktop/perso/site/src/components/pages/Main.jsx"],"names":["React","useState","useContext","useEffect","FirebaseContext","Main","props","ctx","session","setSession","userData","setUserData","user","auth","currentUser","uid","get","then","doc","exists","myData","data","catch","error","console","log","history","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,eAAR,QAA8B,aAA9B,C,CAEA;;AAIA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAMC,GAAG,GAAGL,UAAU,CAACE,eAAD,CAAtB,CAFsB,CAGtB;;AACA,QAAM,CAACI,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACS,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,UAAMS,IAAI,GAAGL,GAAG,CAACM,IAAJ,CAASC,WAAtB;AAEAP,IAAAA,GAAG,CAACK,IAAJ,CAASJ,OAAO,CAACO,GAAjB,EACCC,GADD,GAECC,IAFD,CAEMC,GAAG,IAAI;AACX,UAAGA,GAAG,IAAIA,GAAG,CAACC,MAAd,EAAsB;AACpB;AACA,cAAMC,MAAM,GAAGF,GAAG,CAACG,IAAJ,EAAf;AACAV,QAAAA,WAAW,CAACS,MAAD,CAAX;AACD;AACF,KARD,EASCE,KATD,CASQC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,8BAArB;AACD,KAXD;;AAYE,QAAGX,IAAH,EAAS;AACPH,MAAAA,UAAU,CAACG,IAAD,CAAV;AACD,KAFD,MAEO;AACLH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAH,MAAAA,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD;AAIJ,GA1BQ,EA0BP,CAACpB,GAAG,CAACM,IAAJ,CAASC,WAAV,EAAuBR,KAAK,CAACoB,OAA7B,CA1BO,CAAT;AA4BA,SAAOlB,OAAO,KAAK,IAAZ,gBACL;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAOL;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIF,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBAPF;AAYD,CA/CD;;GAAML,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport {FirebaseContext} from '../Firebase';\r\n\r\n//composants\r\n\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n  const ctx = useContext(FirebaseContext);\r\n  //var etats\r\n  const [session,setSession] = useState(null);\r\n  const [userData,setUserData] = useState({});\r\n\r\n  useEffect(() => {\r\n\r\n    //si session actif\r\n    const user = ctx.auth.currentUser;\r\n\r\n    ctx.user(session.uid)\r\n    .get()\r\n    .then(doc => {\r\n      if(doc && doc.exists) {\r\n        //setUserData(doc.data());\r\n        const myData = doc.data();\r\n        setUserData(myData);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(`${error} : pas de collection trouver`);\r\n    })\r\n      if(user) {\r\n        setSession(user);\r\n      } else {\r\n        setSession(null);\r\n        props.history.push(\"/connexion\");\r\n      }\r\n\r\n\r\n\r\n  },[ctx.auth.currentUser, props.history]);\r\n\r\n  return session === null ? (\r\n    <main className=\"container row\">\r\n      <div className=\"helper\">\r\n        <p>..Cherche si tu existe dans les registres..</p>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <>\r\n      <p>Session trouv√©e !</p>\r\n      <p>{props.userData}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}